<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.ThemeMapper">

    <!--enable mybatis default cache configure reference:
        https://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html#cache
    -->
    <!--<cache/>-->

    <sql id="themesDtoColumns">
        ${alias}.id,
        ${alias}.master_item_id,
        ${alias}.theme_img,
        ${alias}.theme_url,
        ${alias}.sort_nu
    </sql>

    <sql id="themesListDtoColumns">
        ${alias}.theme_id,
        ${alias}.item_id,
        ${alias}.item_img,
        ${alias}.item_url,
        ${alias}.item_title,
        ${alias}.item_price,
        ${alias}.item_cost_price,
        ${alias}.item_discount,
        ${alias}.item_sold_amount,
        ${alias}.or_master_item,
        ${alias}.master_item_tag,
        ${alias}.collect_count,
        ${alias}.master_item_img
    </sql>

    <sql id="slider">
        ${alias}.id,
        ${alias}.img,
        ${alias}.sort_nu,
        ${alias}.create_at
    </sql>

    <sql id = "itemByIdColumns">
        ${alias}.id,
        ${alias}.item_title,
        ${alias}.on_shelves_at,
        ${alias}.off_shelves_at,
        ${alias}.item_detail_imgs,
        ${alias}.item_features,
        ${alias}.theme_id,
        ${alias}.state,
        ${alias}.or_free_ship,
        ${alias}.delivery_area,
        ${alias}.delivery_time,
        ${alias}.or_restrict_buy,
        ${alias}.restrict_amount,
        ${alias}.or_shopping_poll,
        ${alias}.share_img,
        ${alias}.share_url,
        ${alias}.collect_count,
        ${alias}.item_notice
    </sql>

    <sql id = "invListColumns">
        ${alias}.id,
        ${alias}.item_color,
        ${alias}.item_size,
        ${alias}.item_price,
        ${alias}.item_cost_price,
        ${alias}.item_discout,
        ${alias}.rest_amount,
        ${alias}.or_sold_out,
        ${alias}.item_preview_imgs,
        ${alias}.or_master_inv,
        ${alias}.inv_url
    </sql>

    <select id="getThemeListDtoByThemeId" resultType="domain.ThemeListDto" parameterType="java.lang.Long">
        select
        <include refid="themesListDtoColumns">
            <property name="alias" value="t"/>
        </include>
        from theme_item t where theme_id=${value} order by t.or_master_item DESC,t.sort_nu
    </select>


    <select id="getThemeIosDto" resultType="domain.ThemeDto" parameterType="map">
        select
        <include refid="themesDtoColumns">
            <property name="alias" value="t"/>
        </include>
        from themes t
        ORDER BY t.create_at DESC, t.sort_nu
        LIMIT ${pageSize} OFFSET ${offset}
    </select>

    <select id="getSlider" resultType="domain.Slider" >
        select
        <include refid="slider">
            <property name="alias" value="t"/>
        </include>
        from slider t
        ORDER BY t.create_at DESC, t.sort_nu
    </select>

    <select id="getItemById" resultType="domain.Item" parameterType="domain.Item">
        select
        <include refid="itemByIdColumns">
            <property name="alias" value="t"/>
        </include>
        from items t
        where 1=1
        <if test="id!=null and id !=''">
            and t.id = ${id}
        </if>
        ORDER BY t.create_at DESC
    </select>

    <select id="getInvList" resultType="domain.Inventory" parameterType="domain.Item">
        select
        <include refid="invListColumns">
            <property name="alias" value="t"/>
        </include>,
        (select d.item_title from items d where d.id=t.item_id) as invTitle,
        (select d.collect_count from items d where d.id=t.item_id) as invCollection
        from inventories t
        where 1=1
        <if test="id != null and id!=''">
            and t.item_id = ${id}
        </if>
        ORDER BY t.item_color
    </select>

</mapper>
